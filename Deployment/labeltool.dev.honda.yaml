kind: Namespace
apiVersion: v1
metadata:
  name: honda-dev
  labels:
    name: honda-dev

---

kind: Service
apiVersion: v1
metadata:
  name: mongodb
  namespace: honda-dev
spec:
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017

---

kind: Endpoints
apiVersion: v1
metadata:
  name: mongodb
  namespace: honda-dev
subsets:
  - addresses:
      - ip: 10.1.4.5
    ports:
      - port: 27017

---

kind: Service
apiVersion: v1
metadata:
  name: mariadb
  namespace: honda-dev
spec:
  ports:
  - protocol: TCP
    port: 33306
    targetPort: 33306

---

kind: Endpoints
apiVersion: v1
metadata:
  name: mariadb
  namespace: honda-dev
subsets:
  - addresses:
      - ip: 10.1.4.5
    ports:
      - port: 33306

---

kind: ConfigMap  
apiVersion: v1  
metadata:  
  name: webapi-appsettings
  namespace: honda-dev
  labels:
    app: webapi
data:  
  appsettings.json: |
    {
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapi
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: webapi
  replicas: 1
  template:
    metadata:
      labels:
        app: webapi
    spec:
      containers:
      - name: webapi
        image: labeltool.eastasia.cloudapp.azure.com:5443/musickg.webapi:11628
        ports:
        - containerPort: 5000
        env:
        - name: ASPNETCORE_URLS
          value: "http://*:5000"
        - name: ASPNETCORE_ENVIRONMENT
          value: Kubenetes
        volumeMounts:
        - name: appsettings
          readOnly: true
          mountPath: /MusicKG.WebApi/appsettings.Kubenetes.json
          subPath: appsettings.json
        readinessProbe:
          httpGet:
            path: api/swagger/index.html
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: api/swagger/index.html
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 30
      imagePullSecrets:
      - name: labeltool
      volumes:
      - name: appsettings
        configMap:
          name: webapi-appsettings

---

kind: Service
apiVersion: v1
metadata:
  name: webapi
  namespace: honda-dev
spec:
  selector:
    app: webapi
  type: NodePort
  ports:
  - protocol: TCP
    port: 5000
    nodePort: 30300

---

kind: ConfigMap  
apiVersion: v1  
metadata:
  name: hondaapi-appsettings
  namespace: honda-dev
  labels:
    app: hondaapi
data:  
  appsettings.json: |
    {
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: hondaapi
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: hondaapi
  replicas: 1
  template:
    metadata:
      labels:
        app: hondaapi
    spec:
      containers:
      - name: hondaapi
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.webapi:11653
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_URLS
          value: "http://*:80"
        - name: ASPNETCORE_ENVIRONMENT
          value: Kubenetes
        volumeMounts:
        - name: appsettings
          readOnly: true
          mountPath: /app/appsettings.Kubenetes.json
          subPath: appsettings.json
        readinessProbe:
          httpGet:
            path: api/swagger/index.html
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: api/swagger/index.html
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 30
      imagePullSecrets:
      - name: labeltool
      volumes:
      - name: appsettings
        configMap:
          name: hondaapi-appsettings

---

kind: Service
apiVersion: v1
metadata:
  name: hondaapi
  namespace: honda-dev
spec:
  selector:
    app: hondaapi
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offlineworker-modeltraining
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: offlineworker-modeltraining
  replicas: 1
  template:
    metadata:
      labels:
        app: offlineworker-modeltraining
    spec:
      containers:
      - name: offlineworker-modeltraining
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.modeltrainer:11629
        ports:
        - containerPort: 80
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: offlineworker-modeltraining
  namespace: honda-dev
spec:
  selector:
    app: offlineworker-modeltraining
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30311
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offlineworker-mariadb-labeling
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: offlineworker-mariadb-labeling
  replicas: 1
  template:
    metadata:
      labels:
        app: offlineworker-mariadb-labeling
    spec:
      containers:
      - name: offlineworker-mariadb-labeling
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.offlineworker:11654
        ports:
        - containerPort: 80
        env:
        - name: DOTNET_ENVIRONMENT
          value: RawMariaToLabeling
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: offlineworker-mariadb-labeling
  namespace: honda-dev
spec:
  selector:
    app: offlineworker-mariadb-labeling
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30304
    
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offlineworker-mongo-labeling
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: offlineworker-mongo-labeling
  replicas: 1
  template:
    metadata:
      labels:
        app: offlineworker-mongo-labeling
    spec:
      containers:
      - name: offlineworker-mongo-labeling
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.offlineworker:11654
        ports:
        - containerPort: 80
        env:
        - name: DOTNET_ENVIRONMENT
          value: RawMongoToLabeling
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: offlineworker-mongo-labeling
  namespace: honda-dev
spec:
  selector:
    app: offlineworker-mongo-labeling
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30305

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offlineworker-result-handler
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: offlineworker-result-handler
  replicas: 1
  template:
    metadata:
      labels:
        app: offlineworker-result-handler
    spec:
      containers:
      - name: offlineworker-result-handler
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.offlineworker:11654
        ports:
        - containerPort: 80
        env:
        - name: DOTNET_ENVIRONMENT
          value: ResultHandling
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: offlineworker-result-handler
  namespace: honda-dev
spec:
  selector:
    app: offlineworker-result-handler
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30310

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offlineworker-master-reannotation
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: offlineworker-master-reannotation
  replicas: 1
  template:
    metadata:
      labels:
        app: offlineworker-master-reannotation
    spec:
      containers:
      - name: offlineworker-master-reannotation
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.offlineworker:11654
        ports:
        - containerPort: 80
        env:
        - name: DOTNET_ENVIRONMENT
          value: MasterReannotation
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: offlineworker-master-reannotation
  namespace: honda-dev
spec:
  selector:
    app: offlineworker-master-reannotation
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30307

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offlineworker-warning-calculation
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: offlineworker-warning-calculation
  replicas: 1
  template:
    metadata:
      labels:
        app: offlineworker-warning-calculation
    spec:
      containers:
      - name: offlineworker-warning-calculation
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.offlineworker:11654
        ports:
        - containerPort: 80
        env:
        - name: DOTNET_ENVIRONMENT
          value: WarningCalculation
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: offlineworker-warning-calculation
  namespace: honda-dev
spec:
  selector:
    app: offlineworker-warning-calculation
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30308

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offlineworker-bootstrap
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: offlineworker-bootstrap
  replicas: 1
  template:
    metadata:
      labels:
        app: offlineworker-bootstrap
    spec:
      containers:
      - name: offlineworker-bootstrap
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda.offlineworker:11654
        ports:
        - containerPort: 80
        env:
        - name: DOTNET_ENVIRONMENT
          value: RawMariaToMaster
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: offlineworker-bootstrap
  namespace: honda-dev
spec:
  selector:
    app: offlineworker-bootstrap
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30309

---


kind: ConfigMap  
apiVersion: v1  
metadata:  
  name: nginx 
  namespace: honda-dev
  labels:
    app: webui
data:  
  nginx.conf: |
    server {
      listen       80;
      server_name  localhost;

      server_tokens off;

      location / {
        root   /usr/share/nginx/html;
        index  index.html;
        
        try_files $uri $uri/ /index.html;
      }

      location /api/honda/v1/ {
        client_max_body_size 0;
        proxy_pass http://hondaapi:80;
      }

      location /api/ {
        client_max_body_size 0;
        proxy_pass http://webapi:5000;
      }

      error_page   500 502 503 504  /50x.html;
      location = /50x.html {
        root   /usr/share/nginx/html;
      }
    }


---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: webui
  replicas: 1
  template:
    metadata:
      labels:
        app: webui
    spec:
      containers:
      - name: webui
        image: labeltool.eastasia.cloudapp.azure.com:5443/musickg.webui:11598
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx
          readOnly: true
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 30
      imagePullSecrets:
      - name: labeltool
      volumes:
      - name: nginx
        configMap:
          name: nginx

---

kind: Service
apiVersion: v1
metadata:
  name: webui
  namespace: honda-dev
spec:
  selector:
    app: webui
  type: NodePort
  ports:
  - protocol: TCP
    port: 80
    nodePort: 30301

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: modelserve
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: modelserve
  replicas: 1
  template:
    metadata:
      labels:
        app: modelserve
    spec:
      containers:
      - name: modelserve
        image: tensorflow/serving:2.3.0
        args: ["--model_config_file=/all_models/all_models.config"]
        ports:
        - containerPort: 8500
        volumeMounts:
        - name: models
          mountPath: /all_models
      volumes:
        - name: models
          azureFile:
            secretName: dialog-engine-development-storage-secret
            shareName: honda-model
            readOnly: true

---

kind: Service
apiVersion: v1
metadata:
  name: modelserve
  namespace: honda-dev
spec:
  selector:
    app: modelserve
  type: NodePort
  ports:
  - protocol: TCP
    port: 8500
    nodePort: 30302

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: riskpredictor
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: riskpredictor
  replicas: 0
  template:
    metadata:
      labels:
        app: riskpredictor
    spec:
      containers:
      - name: riskpredictor
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda-risk-prediction:15340
        ports:
        - containerPort: 5000
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: riskpredictor
  namespace: honda-dev
spec:
  selector:
    app: riskpredictor
  type: NodePort
  ports:
  - protocol: TCP
    port: 5000
    nodePort: 30303

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: preprocessor
  namespace: honda-dev
spec:
  selector:
    matchLabels:
      app: preprocessor
  replicas: 0
  template:
    metadata:
      labels:
        app: preprocessor
    spec:
      containers:
      - name: preprocessor
        image: labeltool.eastasia.cloudapp.azure.com:5443/honda-predict:20210127
        ports:
        - containerPort: 50060
        env:
        - name: tfserving_url
          value: modelserve:8500
      imagePullSecrets:
      - name: labeltool

---

kind: Service
apiVersion: v1
metadata:
  name: preprocessor
  namespace: honda-dev
spec:
  selector:
    app: preprocessor
  type: NodePort
  ports:
  - protocol: TCP
    port: 50060
    nodePort: 30313
