<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AuthHeaderMissingMessage" xml:space="preserve">
    <value>Authorization header is missing.</value>
  </data>
  <data name="AuthHeaderWrongMessage" xml:space="preserve">
    <value>Invalid authorization header.</value>
  </data>
  <data name="AuthUserFailedMessage" xml:space="preserve">
    <value>Failed to authorize user.</value>
  </data>
  <data name="BearerErrorMessage" xml:space="preserve">
    <value>Bearer error="{0}"</value>
  </data>
  <data name="DeserializeJsonFileFailedMessage" xml:space="preserve">
    <value>Deserialize json file to object failed.</value>
  </data>
  <data name="DictionaryEntityEmptyMessage" xml:space="preserve">
    <value>Entity can not be empty.</value>
  </data>
  <data name="DictionaryNameEmtpyMessage" xml:space="preserve">
    <value>Dictionary name can not be empty.</value>
  </data>
  <data name="DictionaryNameExistMessage" xml:space="preserve">
    <value>Dictionary name already exist.</value>
  </data>
  <data name="DictionaryNotExistMessage" xml:space="preserve">
    <value>Dictionary does not exist.</value>
  </data>
  <data name="DictionaryEntriesEmptyMessage" xml:space="preserve">
    <value>Dictionary entries can not be empty.</value>
  </data>
  <data name="DocumentNameEmptyMessage" xml:space="preserve">
    <value>Document name cannot be empty.</value>
  </data>
  <data name="DocumentNotExistMessage" xml:space="preserve">
    <value>Document does not exist.</value>
  </data>
  <data name="DocumentUploadFailedDetailMessage" xml:space="preserve">
    <value>FileName: {0}, reason: {1}.</value>
  </data>
  <data name="DocumentUploadFailedMessage" xml:space="preserve">
    <value>There are errors when uploading documents, total uploading count: {0}, failed document count: {1}. Details: </value>
  </data>
  <data name="FileContentNotExistMessage" xml:space="preserve">
    <value>File content does not exist.</value>
  </data>
  <data name="FileContentWrongMessage" xml:space="preserve">
    <value>Invalid file content.</value>
  </data>
  <data name="FileFormatWrongMessage" xml:space="preserve">
    <value>Unsupported file format.</value>
  </data>
  <data name="GetFileContentFailedMessage" xml:space="preserve">
    <value>Failed to get file content.</value>
  </data>
  <data name="NoTaskCanBeApprovedMessage" xml:space="preserve">
    <value>Task does not exist or task can not be approved.</value>
  </data>
  <data name="NoTaskCanBeRejectMessage" xml:space="preserve">
    <value>Task does not exist or task can not be rejected.</value>
  </data>
  <data name="OntologyEntityCreateFailedMessage" xml:space="preserve">
    <value>Failed to create ontology entity.</value>
  </data>
  <data name="OntologyEntityDuplicatePropertyNameMessage" xml:space="preserve">
    <value>Duplicate property names in ontology entity.</value>
  </data>
  <data name="OntologyEntityNameEmptyMessage" xml:space="preserve">
    <value>Ontology entity name is empty.</value>
  </data>
  <data name="OntologyEntityNameExistMessage" xml:space="preserve">
    <value>Ontology entity name already exist.</value>
  </data>
  <data name="OntologyEntityNotExistMessage" xml:space="preserve">
    <value>Ontology entity does not exist.</value>
  </data>
  <data name="OntologyEntityPropertyNameWrongMessage" xml:space="preserve">
    <value>Ontology entity property contains invalid characters.</value>
  </data>
  <data name="OntologyEntityUpdateFailedMessage" xml:space="preserve">
    <value>Failed to update ontology entity.</value>
  </data>
  <data name="OntologyRelationCreateFailedMessage" xml:space="preserve">
    <value>Failed to create ontology relation.</value>
  </data>
  <data name="OntologyRelationDuplicatePropertyNameMessage" xml:space="preserve">
    <value>Duplicate property names in ontology relation.</value>
  </data>
  <data name="OntologyRelationFirstEntityIdWrongMessage" xml:space="preserve">
    <value>The first entity Id format error.</value>
  </data>
  <data name="OntologyRelationFirstEntityNotExistMessage" xml:space="preserve">
    <value>The first entity in the ontology relation does not exist.</value>
  </data>
  <data name="OntologyRelationNameEmptyMessage" xml:space="preserve">
    <value>Ontology relation name is empty.</value>
  </data>
  <data name="OntologyRelationNameExistMessage" xml:space="preserve">
    <value>Ontology relation name already exist.</value>
  </data>
  <data name="OntologyRelationNameWrongMessage" xml:space="preserve">
    <value>Ontology relation name contains invalid characters.</value>
  </data>
  <data name="OntologyRelationNotExistMessage" xml:space="preserve">
    <value>Ontology relation does not exist.</value>
  </data>
  <data name="OntologyRelationPropertyNameWrongMessage" xml:space="preserve">
    <value>Ontology relation property contains invalid characters.</value>
  </data>
  <data name="OntologyRelationSecondEntityIdWrongMessage" xml:space="preserve">
    <value>The second entity Id format error.</value>
  </data>
  <data name="OntologyRelationSecondEntityNotExistMessage" xml:space="preserve">
    <value>The second entity in the ontology relation does not exist.</value>
  </data>
  <data name="OntologyRelationUpdateFailedMessage" xml:space="preserve">
    <value>Failed to update ontology relation.</value>
  </data>
  <data name="OntologyUploadDuplicateEntityNameMessage" xml:space="preserve">
    <value>Duplicate ontology entity names exist in the file.</value>
  </data>
  <data name="OntologyUploadDuplicateRelationNameMessage" xml:space="preserve">
    <value>Duplicate ontology relation names exist in the file.</value>
  </data>
  <data name="OntologyWorkspaceIdEmptyMessage" xml:space="preserve">
    <value>Workspace Id cannot be empty.</value>
  </data>
  <data name="OntologyWorkspaceIdWrongMessage" xml:space="preserve">
    <value>Workspace Id format is incorrect.</value>
  </data>
  <data name="ParseTokenFailedMessage" xml:space="preserve">
    <value>Failed to parse token.</value>
  </data>
  <data name="RuleEntityIdEmptyMessage" xml:space="preserve">
    <value>EntityId can not be empty.</value>
  </data>
  <data name="RuleNameEmptyMessage" xml:space="preserve">
    <value>Rule name can not be empty.</value>
  </data>
  <data name="RuleNameExistMessage" xml:space="preserve">
    <value>Rule name already exist.</value>
  </data>
  <data name="RuleNotExistMessage" xml:space="preserve">
    <value>Rule does not exist.</value>
  </data>
  <data name="RuleRegexsEmptyMessage" xml:space="preserve">
    <value>Regexs can not be empty.</value>
  </data>
  <data name="SchemaWrongMessage" xml:space="preserve">
    <value>Invalid scheme.</value>
  </data>
  <data name="SystemDownMessage" xml:space="preserve">
    <value>System is unavailable.</value>
  </data>
  <data name="TaskAnnotatorOrDocumentNotExistMessage" xml:space="preserve">
    <value>Annotator or document does not exist.</value>
  </data>
  <data name="TaskCreateFailedMessage" xml:space="preserve">
    <value>Failed to create task.</value>
  </data>
  <data name="TaskExpectedDueAtWrongMessage" xml:space="preserve">
    <value>Task expected due at should be greater than the current time.</value>
  </data>
  <data name="TaskNameEmptyMessage" xml:space="preserve">
    <value>Task name can not be empty.</value>
  </data>
  <data name="TaskNameExistMessage" xml:space="preserve">
    <value>Task name already exist.</value>
  </data>
  <data name="TaskNotExistMessage" xml:space="preserve">
    <value>Task does not exist.</value>
  </data>
  <data name="TaskOverlapWrongMessage" xml:space="preserve">
    <value>Task overlap not in range.</value>
  </data>
  <data name="TaskStatusUnknownMessage" xml:space="preserve">
    <value>Unknown task status.</value>
  </data>
  <data name="TaskUpdateFailedMessage" xml:space="preserve">
    <value>Failed to update task.</value>
  </data>
  <data name="TokenWrongMessage" xml:space="preserve">
    <value>Invalid token.</value>
  </data>
  <data name="UnauthorizedMessage" xml:space="preserve">
    <value>Unauthorized operation.</value>
  </data>
  <data name="UserCreateFailedMessage" xml:space="preserve">
    <value>Failed to create user.</value>
  </data>
  <data name="UserDisabledMessage" xml:space="preserve">
    <value>User is disabled.</value>
  </data>
  <data name="UserIdWrongMessage" xml:space="preserve">
    <value>Invalide user ID.</value>
  </data>
  <data name="UserLoginCountOverflowMessage" xml:space="preserve">
    <value>Too many logins for this user.</value>
  </data>
  <data name="UserNameEmptyMessage" xml:space="preserve">
    <value>User name can not be empty.</value>
  </data>
  <data name="UserNameExistMessage" xml:space="preserve">
    <value>User name already exist.</value>
  </data>
  <data name="UserNamePasswordWrongMessage" xml:space="preserve">
    <value>Wrong user name or password.</value>
  </data>
  <data name="UserNotExistMessage" xml:space="preserve">
    <value>User does not exist.</value>
  </data>
  <data name="UserPasswordEmptyMessage" xml:space="preserve">
    <value>Password can not be empty.</value>
  </data>
  <data name="UserUnauthorizedMessage" xml:space="preserve">
    <value>Invalid token or unauthorized access.</value>
  </data>
  <data name="WorkflowStepGetFailedMessage" xml:space="preserve">
    <value>Failed to get workflow step.</value>
  </data>
  <data name="WorkspaceCreateFailedMessage" xml:space="preserve">
    <value>Failed to create workspace.</value>
  </data>
  <data name="WorkspaceDeleteFailedMessage" xml:space="preserve">
    <value>Failed to delete workspace.</value>
  </data>
  <data name="WorkspaceNameEmptyMessage" xml:space="preserve">
    <value>Workspace name can not be empty.</value>
  </data>
  <data name="WorkspaceNameExistMessage" xml:space="preserve">
    <value>Workspace name already exist.</value>
  </data>
  <data name="WorkspaceNotExistMessage" xml:space="preserve">
    <value>Workspace does not exist.</value>
  </data>
  <data name="WorkspaceTypeNameEmptyMessage" xml:space="preserve">
    <value>Workspace type name can not be empty.</value>
  </data>
  <data name="WorkspaceTypeNameExistMessage" xml:space="preserve">
    <value>Workspace type name already exist.</value>
  </data>
  <data name="WorkspaceTypeNotExistMessage" xml:space="preserve">
    <value>Workspace type does not exist.</value>
  </data>
  <data name="WorkspaceUpdateFailedMessage" xml:space="preserve">
    <value>Failed to update workspace.</value>
  </data>
  <data name="DictionaryCreateFailedMessage" xml:space="preserve">
    <value>Failed to create dictionary.</value>
  </data>
  <data name="DictionaryDeleteFailedMessage" xml:space="preserve">
    <value>Failed to delete dictionary.</value>
  </data>
  <data name="DictionaryUpdateFailedMessage" xml:space="preserve">
    <value>Failed to update dictionary.</value>
  </data>
  <data name="DocumentItemCountWrongMessage" xml:space="preserve">
    <value>Number of document item count must equals to the number of documents.</value>
  </data>
  <data name="FromDateGreaterThanToDateMessage" xml:space="preserve">
    <value>From date is greater or equal than to date.</value>
  </data>
  <data name="InvalidPreannotationProcessor" xml:space="preserve">
    <value>Preannotation Processor class {0} must implement IProcessorProvider.</value>
  </data>
  <data name="PreannotationAssemblyNotFound" xml:space="preserve">
    <value>Preannotation processor assembly {0} is not found.</value>
  </data>
  <data name="PreannotationClassNotFound" xml:space="preserve">
    <value>Preannotation processor class {0} is not found.</value>
  </data>
  <data name="TokenizationProcessFailed" xml:space="preserve">
    <value>Tokenization process failed, details: {0}.</value>
  </data>
  <data name="DialogOntologyRenewFailedMessage" xml:space="preserve">
    <value>Renew dialog ontology failed.</value>
  </data>
  <data name="DialogOntologyEntityDuplicateMessage" xml:space="preserve">
    <value>Ontology entity file only can be uploaded once.</value>
  </data>
  <data name="DialogOntologyIntentDuplicateMessage" xml:space="preserve">
    <value>Ontology intent file only can be uploaded once.</value>
  </data>
  <data name="MissingCategoriesMessage" xml:space="preserve">
    <value>Missing categories.</value>
  </data>
  <data name="TextClassifyGuidlineMessage" xml:space="preserve">
    <value>Select category for the given document, first item is the whole document, others are the paragraph of this document.</value>
  </data>
  <data name="NoTagValueCanBeUpdatedMessage" xml:space="preserve">
    <value>Tag or tag value does not exist.</value>
  </data>
  <data name="TagValueNotExistMessage" xml:space="preserve">
    <value>Tag value does not exist.</value>
  </data>
  <data name="ValueAlreadyExistsMessage" xml:space="preserve">
    <value>Tag already exists.</value>
  </data>
  <data name="OntologyEntityAndRelationGuidlineMessage" xml:space="preserve">
    <value>Entity and relation annotation.</value>
  </data>
  <data name="TextSimilarityGuidlineMessage" xml:space="preserve">
    <value>For a given user question (source text) and standard question (target text), indicate whether they are similar.</value>
  </data>
  <data name="AutoTaskCreationRuleNotExistsMessage" xml:space="preserve">
    <value>AutoTaskCreationRule does not exsit.</value>
  </data>
  <data name="AuotTaskCreationRulesUpdateFailedMessage" xml:space="preserve">
    <value>Failed to update auto task creation rules.</value>
  </data>
  <data name="HondaSyndromeNotExistMessage" xml:space="preserve">
    <value>Honda syndrome does not exisst.</value>
  </data>
  <data name="HondaSyndromeUpdateFailedMessage" xml:space="preserve">
    <value>Failed to update honda syndrome.</value>
  </data>
  <data name="HondaSyndromeCreateFailedMessage" xml:space="preserve">
    <value>Failed to create honda syndrome.</value>
  </data>
  <data name="HondaSyndromeNameEmtpyMessage" xml:space="preserve">
    <value>Honda syndrome name can not be empty.</value>
  </data>
  <data name="DefaultRuleMustNotContainAnyTag" xml:space="preserve">
    <value>The default rule must not have any docuement tag.</value>
  </data>
  <data name="MustHaveDefaultRuleForTaskCreation" xml:space="preserve">
    <value>The default rule for task creation must not be empty.</value>
  </data>
  <data name="NonDefaultRulesMustHaveTags" xml:space="preserve">
    <value>Non-default rules must have tags.</value>
  </data>
  <data name="OnlyConflictResolvedStatusCanbeMerged" xml:space="preserve">
    <value>Only task with status ConflictResolved can be merged.</value>
  </data>
  <data name="DifferentRulesCannotHaveSameTagMessage" xml:space="preserve">
    <value>Different rules cannot have same tag.</value>
  </data>
</root>